name: Release Builds

on:
  workflow_dispatch:
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-win:
    runs-on: windows-latest

    env:
      FILE_NAME: target/release/trimsec-win-latest.zip

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Build
        run: cargo build --release --verbose --locked

      - name: Run tests
        run: cargo test --release --verbose --locked

      - name: Compress binary
        run: |
          powershell -Command "Compress-Archive -Path target/release/trimsec.exe -DestinationPath $env:FILE_NAME"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: trimsec-win-latest
          path: ${{ env.FILE_NAME }}
          retention-days: 90

      - name: Uplaod compressed binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.FILE_NAME }}
          tag: ${{ github.ref }}
          overwrite: true

  build-unix:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    env:
      FILE_NAME: target/release/trimsec-${{ matrix.os }}.zip

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Build
        run: cargo build --release --verbose --locked

      - name: Run tests
        run: cargo test --release --verbose --locked

      - name: Compress binary
        run: zip -j ${{ env.FILE_NAME }} target/release/trimsec

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: trimsec-${{ matrix.os }}
          path: ${{ env.FILE_NAME }}
          retention-days: 90

      - name: Upload compressed binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.FILE_NAME }}
          tag: ${{ github.ref }}
          overwrite: true

  publish:
    needs: [build-win, build-unix]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Generate markdown for cargo
        run: |
          chmod +x generate_md.sh
          ./generate_md.sh

      - name: Publish using cargo
        run: cargo publish --token ${{ secrets.CRATES_TOKEN }} --allow-dirty
